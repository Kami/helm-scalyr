name: "Lint and Tests"

on:
  push:
    branches:
      - master
      - main
      - end_to_end_tests
  pull_request:
    branches:
      - master
      - main
      - end_to_end_tests
  schedule:
    - cron: '0 4 * * *'

jobs:
  # Special job which automatically cancels old runs for the same branch, prevents runs for the
  # same file set which has already passed, etc.
  pre_job:
    name: Skip Duplicate Jobs Pre Job
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@f75dd6564bb646f95277dc8c3b80612e46a4a1ea # v3.4.1
        with:
          cancel_others: 'true'
          github_token: ${{ github.token }}

  lint_test:
    needs: pre_job
    # NOTE: We always want to run job on master
    if: ${{ needs.pre_job.outputs.should_skip != 'true' || github.ref == 'refs/heads/master' }}
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@18bc76811624f360dbd7f18c2d4ecb32c7b87bab # v1.1
        with:
          version: v3.7.0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@5f16c27cf7a4fa9c776ff73734df3909b2b65127 # v2.1.0
        with:
          version: v3.4.0

      - name: Run chart-testing (lint)
        run: |
          ct lint --debug --charts . --chart-dirs "$(pwd)"

      - name: Create kind Kubernetes cluster
        uses: helm/kind-action@94729529f85113b88f4f819c17ce61382e6d8478 # v1.2.0

      - name: Run chart-testing (install) - daemonset controller type
        env:
          # We perform just the chart install and not full end to end test here so
          # we don't use a valid API key.
          API_KEY: "dummy"
        run: |
          # Write test values to a file which is used by ct install
          mkdir -p ci/
          echo -e 'controllerType: "daemonset"\nscalyr:\n  apiKey: "${API_KEY}"' > ci/test-values.yaml

          ct install --debug --charts . --chart-dirs "$(pwd)"

      - name: Run chart-testing (install) - deployment controller type
        env:
        # We perform just the chart install and not full end to end test here so
        # we don't use a valid API key.
          API_KEY: "dummy"
        run: |
          # Write test values to a file which is used by ct install
          mkdir -p ci/
          echo -e 'controllerType: "deployment"\nscalyr:\n  apiKey: "${API_KEY}"' > ci/test-values.yaml

          ct install --debug --charts . --chart-dirs "$(pwd)"
